<div aria-live="polite" aria-atomic="true" style="position: relative; min-height: 200px;">
    <div class="toast show @(IsVisible ? "fade show" : null)" style="position: absolute; top: 0; right: 0;">
        <div class="toast-header">
            <strong class="mr-auto">@Heading</strong>
            <small>11 mins ago</small>
            <button type="button" class="ml-2 mb-1 close" data-dismiss="toast" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
        <div class="toast-body">
            @Message
        </div>
    </div>
</div>

@code {
    [Inject]
    ToastService ToastService { get; set; }
    protected string Heading { get; set; }
    protected string Message { get; set; }
    protected bool IsVisible { get; set; }
    protected string BackgroundCssClass { get; set; }
    protected string IconCssClass { get; set; }
    protected override void OnInitialized()
    {
        ToastService.OnShow += ShowToast;
        ToastService.OnHide += HideToast;
    }

    void ShowToast(string message, ToastLevel level)
    {
        BuildToastSettings(level, message);
        IsVisible = true;
        StateHasChanged();
    }

    void HideToast()
    {
        IsVisible = false;
        StateHasChanged();
    }

    void BuildToastSettings(ToastLevel level, string message)
    {
        switch (level)
        {
            case ToastLevel.Info:
                BackgroundCssClass = "bg-info";
                IconCssClass = "info";
                Heading = "Info";
                break;
            case ToastLevel.Success:
                BackgroundCssClass = "bg-success";
                IconCssClass = "check";
                Heading = "Success";
                break;
            case ToastLevel.Warning:
                BackgroundCssClass = "bg-warning";
                IconCssClass = "exclamation";
                Heading = "Warning";
                break;
            case ToastLevel.Error:
                BackgroundCssClass = "bg-danger";
                IconCssClass = "times";
                Heading = "Error";
                break;
        }
        Message = message;
    }

    public void Dispose()
    {
        ToastService.OnShow -= ShowToast;
    }
}