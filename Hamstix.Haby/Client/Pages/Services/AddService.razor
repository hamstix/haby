@page "/services/add"
@using Hamstix.Haby.Client.Components
@using Hamstix.Haby.Client.Components.Toast
@using Hamstix.Haby.Client.Models
@using Hamstix.Haby.Shared.Api.WebUi.v1.Plugins
@using Hamstix.Haby.Shared.Api.WebUi.v1.Services
@using System.Text.Json.Nodes
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject ToastService ToastService

<PageTitle>Add new Service</PageTitle>

<BreadCrumbsComponent BreadCrumbs="_breadCrumbs"></BreadCrumbsComponent>

<h1>Add new Service</h1>

@if (_plugins == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <EditForm Model="@_postModel" OnValidSubmit="@HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="mb-3">
            <label for="name" class="form-label">Name</label>
            <InputText class="form-control" id="name" @bind-Value="_postModel.Name" />
        </div>
        <div class="mb-3">
            <label for="pluginId" class="form-label">Registered Plugin</label>
            <InputSelect class="form-select" id="pluginId" @bind-Value="_postModel.PluginName">
                <option value="@AppConstants.NonePluginSelected">@AppConstants.NonePluginSelected</option>
                @foreach (var plugin in _plugins)
                {
                <option value="@plugin.Name">@plugin.Name</option>
                }
        </InputSelect>
    </div>
    <div class="mb-3">
        <label for="jsonConfig" class="form-label">Json Config</label>
        <InputTextArea class="form-control" id="jsonConfig" @bind-Value="_postModel.JsonConfig" cols=60 rows=5 />
    </div>
    <div class="mb-3">
        <label for="template" class="form-label">Template</label>
        <InputTextArea class="form-control" id="template" @bind-Value="_postModel.Template" cols=60 rows=5 />
    </div>

    <button class="btn btn-primary" type="submit">Create</button>
</EditForm>

    <AlertComponent @ref="_alertComponent"></AlertComponent>
}

@code {
    ServicePostViewModel _postModel = new();
    PluginPreviewViewModel[]? _plugins;

    List<BreadCrumbItem> _breadCrumbs = new()
        {
            new BreadCrumbItem("Services", false, "/services"),
            new BreadCrumbItem("Create new service", true),
        };

    AlertComponent _alertComponent;

    protected override async Task OnInitializedAsync()
    {
        _plugins = await Http.GetFromJsonAsync<Hamstix.Haby.Shared.Api.WebUi.v1.Plugins.PluginPreviewViewModel[]>(
          "api/webui/haby/v1/services/plugins");
    }

    async Task HandleValidSubmit()
    {
        try
        {
            if (_postModel.PluginName == AppConstants.NonePluginSelected)
                _postModel.PluginName = null;
            var response = await Http.PostAsJsonAsync("api/webui/haby/v1/services", _postModel);
            if (!response.IsSuccessStatusCode)
            {
                var error = await response.Content.ReadFromJsonAsync<JsonObject>();
                var message = error["message"]?.GetValue<string>() ?? string.Empty;
                _alertComponent.SetError(message);
                return;
            }

            var result = await response.Content.ReadFromJsonAsync<ServiceViewModel>();
            _alertComponent.ResetStatus();

            if (result is not null)
                NavigationManager.NavigateTo($"services/{result.Id}");
        }
        catch (Exception e)
        {
            _alertComponent.SetError(e.Message);
        }
    }
}
